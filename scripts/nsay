#!/bin/bash

if [[ "$2" == "" ]]; then

	scale=1;

else

	scale="$2";

fi;

declare -A morse
morse[0]='-----'
morse[1]='.----'
morse[2]='..---'
morse[3]='...--'
morse[4]='....-'
morse[5]='.....'
morse[6]='-....'
morse[7]='--...'
morse[8]='---..'
morse[9]='----.'
morse[A]='.-'
morse[B]='-...'
morse[C]='-.-.'
morse[D]='-..'
morse[E]='.'
morse[F]='..-.'
morse[G]='--.'
morse[H]='....'
morse[I]='..'
morse[J]='.---'
morse[K]='-.-'
morse[L]='.-..'
morse[M]='--'
morse[N]='-.'
morse[O]='---'
morse[P]='.--.'
morse[Q]='--.-'
morse[R]='.-.'
morse[S]='...'
morse[T]='-'
morse[U]='..-'
morse[V]='...-'
morse[W]='.--'
morse[X]='-..-'
morse[Y]='-.--'
morse[Z]='--..'
morse[.]='.-.-.-'
morse[,]='--..--'
morse[?]='..--..'
morse[/]='-..-.'
morse[!]='-.-.--'

morseify () {
	while read -rN1 c; do

	c=${c^}

	if [[ $c == $'\n' ]]; then

		printf '\n'

	elif [[ $c == ' ' ]]; then

		printf '/'

	else

		printf '%s ' "${morse[$c]}"

	fi

done
}

display () {
	input=$(echo "$1" | morseify);
	for (( i=0; i<${#input}; i++ )); do
		case ${input:$i:1} in
			'.')
				numlockx off;
				numlockx on;
				sleep "$(bc<<<.1*"$scale")";
				numlockx off;
				sleep "$(bc<<<.1*"$scale")";
				;;
			'-')
				numlockx off;
				numlockx on;
				sleep "$(bc<<<.3*"$scale")";
				numlockx off;
				sleep "$(bc<<<.1*"$scale")";
				;;
			' ')
				sleep "$(bc<<<.3*"$scale")";
				;;
			'/')
				sleep "$(bc<<<.4*"$scale")";
				;;
			*)
				;;
		esac
	done
}

letters () {
	echo a
}

words () {
	echo a
}

sentences () {
	echo a
}

usage () {
	echo "Usage: nsay [ OPTIONS ]
	-p/--print <text>	Display the text via numlock morse
	-h/--help		Display this message and exit (default)
	-t/--scale <scale>	Set the morse time scale (default: 1)
	-w/--words		Test user on words
	-l/--letters		Test user on letters
	-s/--sentence		Test user on sentences"
}

usage;